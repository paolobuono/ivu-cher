<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:AvengersUtd.Explore.Environment.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Gradients.xaml"/>
        <ResourceDictionary Source="Icons.xaml"/>
        <ResourceDictionary Source="SearchBoxTemplate.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- EllipseBorder -->
    <Style x:Key="EllipseBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="#FF60605D"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="16"/>
        <Setter Property="BitmapEffect">
            <Setter.Value>
                <DropShadowBitmapEffect Color="Black" Direction="320" ShadowDepth="5" Softness="0.5" Opacity="0.2" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Thumb Style -->
    <Style x:Key="SingleConnector" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse Width="15" Height="15" Stroke="DarkSlateGray" StrokeThickness="0.5"
                             Fill="{TemplateBinding Background}">
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="IncomingConnector" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Path Stroke="Black" StrokeThickness="0.5" Fill="{TemplateBinding Background}">
                        <Path.Data>
                            <CombinedGeometry GeometryCombineMode="Exclude">
                                <CombinedGeometry.Geometry1>
                                    <RectangleGeometry Rect="0, 0, 16, 16"/>
                                </CombinedGeometry.Geometry1>
                                <CombinedGeometry.Geometry2>
                                    <RectangleGeometry Rect="5, 0, 6, 8"/>
                                </CombinedGeometry.Geometry2>
                            </CombinedGeometry>
                        </Path.Data>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MultiConnector" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Path Fill="{TemplateBinding Background}" Stroke="DarkSlateGray" StrokeThickness="0.5">
                        <Path.Data>
                            <GeometryGroup FillRule="Nonzero">
                                <EllipseGeometry RadiusX="7.5" RadiusY="7.5" Center="7.5, 7.5"/>
                                <EllipseGeometry RadiusX="4.5" RadiusY="4.5" Center="7.5, 7.5"/>
                            </GeometryGroup>
                        </Path.Data>
                    </Path>
                </ControlTemplate>
            </Setter.Value>            
        </Setter>
    </Style>
    
    <!-- ResourceBox -->
    <Style x:Key="ResourceBox" TargetType="{x:Type ListBox}">
        <Setter Property="Margin" Value="0 0 0 8"/>
        <Setter Property="MinHeight" Value="92"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Height="36">
                        <Image Width="48" Height="Auto" Source="{Binding Path=PreviewUri}" ToolTip="{Binding Path=Type}"/>
                        <StackPanel Orientation="Vertical" Height="36" Width="128">
                            <TextBlock Text="{Binding Path=Title}" TextTrimming="WordEllipsis"  FontSize="16" FontWeight="Bold"  Margin= "0 4 0 0"/>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="RuleBox" TargetType="{x:Type ListBox}">
        <Setter Property="Margin" Value="0 0 0 8"/>
        <Setter Property="MinHeight" Value="92"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"></Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <TextBlock FontSize="14" Padding="4">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} of type {1}">
                                    <Binding Path="Bounds"/>
                                    <Binding Path="Type"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- NumericUpDown -->
    <Style TargetType="{x:Type Controls:NumericUpDown}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:NumericUpDown}">
                    <Grid Margin="3">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="16"/>
                        </Grid.ColumnDefinitions>

                        <Border BorderThickness="1" BorderBrush="Gray" Margin="2" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}" TextAlignment="Center" Padding="5"/>
                        </Border>
                        <RepeatButton Command="{x:Static Controls:NumericUpDown.IncreaseCommand}"
                                      Grid.Column="1" Grid.Row="0" Focusable="False">
                            <Path Stroke="Black" Fill="Black" Data="M 0,8 8,8 L 4,0 Z"/>
                        </RepeatButton>
                        <RepeatButton Command="{x:Static Controls:NumericUpDown.DecreaseCommand}"
                                      Grid.Column="1" Grid.Row="1" Focusable="False"> 
                            <Path Stroke="Black" Fill="Black" Data="M 0,0 4,8 L 8,0 Z"/>
                        </RepeatButton>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--ROUND TEXTBOX -->
    <Style x:Key="RoundTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="8,5,3,3" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="BorderBase" Background="White" BorderThickness="1.4,1.4,1,1" 
                            BorderBrush="Silver" CornerRadius="10" />
                        <Label x:Name="TextPrompt" Content="{TemplateBinding Tag}" Visibility="Collapsed" Focusable="False"  Foreground="Silver"></Label>
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" Foreground="{DynamicResource OutsideFontColor}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"></Condition>
                                <Condition Property="Text" Value=""></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="TextPrompt" Value="Visible"></Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderThickness" TargetName="BorderBase" Value="2.4,2.4,1,1"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="DimGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--InfoButton-->
    <Style x:Key="InfoButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="MaxWidth" Value="16"/>
        <Setter Property="MaxHeight" Value="16"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  CornerRadius="2" BorderThickness="1"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <TextBlock FontSize="14" FontWeight="DemiBold" Text="?" Padding="4 -4 0 0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Blue"/>
                            <Setter Property="Background" Value="{StaticResource ConnectorAvailable}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource DarkBlueGradient}"/>
    </Style>

    <!--MinimizeButton-->
    <Style x:Key="CollapseButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="MaxWidth" Value="16"/>
        <Setter Property="MaxHeight" Value="16"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border"  CornerRadius="2" BorderThickness="1"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Border x:Name="decoratorOutside" Margin="0" Width="12" Height="12"
                                BorderBrush="Black" Background="White" BorderThickness="1">
                            <Rectangle x:Name="decoratorInside" Width="6" Height="6"
                                Fill="{Binding ElementName=Border, Path=Background}" Stroke="Black" StrokeThickness="1"/>
                        </Border>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Blue"/>
                            <Setter Property="Background" Value="{StaticResource DarkGrayGradient}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="decoratorOutside" Property="Height" Value="4"/>
                            <Setter TargetName="decoratorOutside" Property="Margin" Value="0 5 0 0"/>
                            <Setter TargetName="decoratorInside" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource LightBlueGradient}"/>
    </Style>
    <!--CloseButton-->
    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"  CornerRadius="2" BorderThickness="1"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Image Source="{StaticResource CloseIcon}"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource LightBlueGradient}"/>
    </Style>

    <!--FilterButton-->
    <Style x:Key="FilterButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <AdornerDecorator>
                        <Border HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="border" Padding="0" CornerRadius="5,5,5,5"
                                Background="{TemplateBinding Background}"
                                BorderBrush="#FF000000" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"/>
                        </Border>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource LightBlueGradient}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <!--Counter-->
    <Style x:Key="CounterStyle" TargetType="{x:Type Label}">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="MaxWidth" Value="48"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            CornerRadius="4" Padding="1">
                        <ContentPresenter x:Name="contentPresenter"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--DataTrigger Binding="{Binding Path=Content}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   
</ResourceDictionary>